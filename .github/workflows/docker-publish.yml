name: Docker publish

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

jobs:

  push:
    runs-on: ubuntu-18.04

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag image

      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_API_KEY }}" | docker login -u ${{ secrets.DOCKER_HUB_USER }} --password-stdin

      - name: Set image name environment variable
        run: |
          # Set the IMAGE_ID as the lower case version of this Github repo
          IMAGE_ID=$(echo ${{ github.repository }} | tr '[A-Z]' '[a-z]')

          # Print the computed IMAGE_ID for the user to see
          echo IMAGE_ID=$IMAGE_ID

          # Set IMAGE_ID as an environment variable for the upcoming steps
          echo "::set-env name=IMAGE_ID::$IMAGE_ID"

      - name: Push image to main tag
        run: |
          #IMAGE_ID=${{ github.repository }}
          
          # Change all uppercase to lowercase
          #IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo VERSION=$VERSION
          
          # Push with the current version
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Push image to Git SHA tag
        run: |
          # Push based on the last 8 Git SHA characters
          docker tag image $IMAGE_ID:${GITHUB_SHA::8}
          docker push $IMAGE_ID:${GITHUB_SHA::8}
